# Define a function to apply the rules to each row pair and return the rule index
def match_row(row1, row2):
    for i, rule in enumerate(rules):
        try:
            if rule(row1, row2):
                return True, i+1
        except IndexError:
            pass
    return False, "Unmatched"










import time

start_time = time.time()

# Your code goes here

end_time = time.time()

elapsed_time = end_time - start_time
print(f"Elapsed time: {elapsed_time:.2f} seconds")




















import pandas as pd

# Read the rules from a text file
with open("Z:/Desktop/Rules_1.txt", 'r') as f:
    rule_strings = f.readlines()

# Remove new line characters and empty lines, and convert to list of functions
rules = []
for rule_string in rule_strings:
    rule_string = rule_string.strip()
    if rule_string:
        rule = eval(f"lambda row, row2: {rule_string}")
        rules.append(rule)

# Define a function to apply the rules to each row pair and return the rule index
def match_row(row1, row2):
    for i, rule in enumerate(rules):
        if rule(row1, row2):
            return True, i+1
    return False, "Unmatched"

# Read in the first Excel sheet in chunks
T5_chunks = pd.read_excel('Z:/Downloads/Unmatched_trans_Data_1.xlsx', dtype=str, chunksize=1000)

# Read in the second Excel sheet in chunks
Invoice_chunks = pd.read_excel('Z:/Downloads/Unmatched_Inv_Data_1.xlsx', dtype=str, chunksize=1000)

# Create an empty list to store the matched rows
matched_rows = []

# Loop through each chunk of T5 rows and find a match in the chunk of Invoice rows
for T5_chunk in T5_chunks:
    for Invoice_chunk in Invoice_chunks:
        # Merge the two chunks on the common columns
        merged = pd.merge(T5_chunk, Invoice_chunk, on=['Company ID & Name'], suffixes=['_T5', '_Invoice'])
        # Loop through each row in the merged dataframe and find a match
        for i, row in merged.iterrows():
            matched, rule_index = match_row(row.to_dict(), row.to_dict())
            if matched:
                # Append the matched rows to the list
                matched_rows.append(row.tolist() + [rule_index])

# Define rule descriptions
rule_descriptions = {
    1: 'Ticket_no_right_of_13, Acct_no, Amount, Currency, Date, C&D indicator, RPIC are same',
    2: 'Ticket_no_right_of_12'
}

# Create a dataframe from the list of matched rows
matched_df = pd.DataFrame(matched_rows, columns=list(T5_chunk.columns) + list(Invoice_chunk.columns) + ['Match Rule'])

# Create the "description" column based on the "Match Rule" column
matched_df['description'] = matched_df['Match Rule'].map(rule_descriptions)

# Write the updated dataframe to a CSV file
matched_df.to_csv("Z:/Desktop/output2.csv", index=False)

# Aggregate the data and write to the second sheet of the Excel file
aggregated = matched_df.groupby(['Company ID & Name', 'Match Rule']).size().reset_index(name='TRF')
total = aggregated['TRF'].sum()
aggregated = aggregated.append(pd.Series(['Total', '-', total], index=aggregated.columns), ignore_index=True)

with pd.ExcelWriter('Z:/Desktop/output2.xlsx') as writer:
    matched_df.to_excel(writer, sheet_name='Matched
