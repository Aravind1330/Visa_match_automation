import pandas as pd

# Read the Excel file
transactions = pd.read_excel('transactions.xlsx')

# Filter rows with transaction types 10 and 11 and invoice numbers
matched = transactions[(transactions['Transaction'] == 10) | (transactions['Transaction'] == 11)]
matched['Matched'] = 'Matched'
matched['Amount'] = matched.apply(lambda row: -row['Amount'] if row['Transaction'] == 11 else row['Amount'], axis=1)
matched.loc[matched['Invoice_no'].notnull(), 'Unmatched'] = ''

# Filter rows with null invoice numbers
unmatched = transactions[transactions['Invoice_no'].isnull()]
unmatched['Unmatched'] = 'Unmatched'
unmatched['T4'] = unmatched['Amount']

# Concatenate matched and unmatched dataframes
result = pd.concat([matched, unmatched], axis=0)

# Highlight every 5th row in the Unmatched column
result.loc[result.index % 5 == 0, 'Unmatched'] = 'background-color: yellow'

# Highlight matched rows in green and unmatched rows in red
result = result.style.applymap(lambda x: 'background-color: green' if x == 'Matched' else 'background-color: red' if x == 'Unmatched' else '', subset=['Matched', 'Unmatched'])

# Sum T4 column from matched and unmatched parts
total = result['T4'].sum()

# Calculate the difference between total and Amount1 sum
diff = total - transactions['Amount1'].sum()

# Add the difference at the end of the matched and unmatched parts
result = result.append(pd.DataFrame({'Matched': '', 'Transaction': '', 'Invoice_no': '', 'Amount': '', 'T4': '', 'Unmatched': '', 'Total': 'Difference', 'Difference': diff}, index=[len(result)]))

# Save the result to Excel file
result.to_excel('transactions.xlsx', index=False)












import pandas as pd

# Read the Excel file
transactions = pd.read_excel('transactions.xlsx')

# Filter rows with transaction types 10 and 11 and invoice numbers
matched = transactions[(transactions['Transaction'] == 10) | (transactions['Transaction'] == 11)]
matched['Amount'] = matched.apply(lambda row: -row['Amount'] if row['Transaction'] == 11 else row['Amount'], axis=1)
matched.loc[matched['Invoice_no'].notnull(), 'Matched'] = 'Matched'

# Filter rows with null invoice numbers
unmatched = transactions[transactions['Invoice_no'].isnull()]
unmatched['T4'] = unmatched['Amount']

# Create header for matched rows
matched_header = pd.DataFrame({'Matched': 'Matched', 'Transaction': '', 'Invoice_no': '', 'Amount': '', 'T4': '', 'Unmatched': ''}, index=[0])

# Add 5 rows gap and create header for unmatched rows
unmatched_header = pd.DataFrame({'Matched': '', 'Transaction': '', 'Invoice_no': '', 'Amount': '', 'T4': '', 'Unmatched': 'Unmatched'}, index=range(len(matched) + 5, len(matched) + len(unmatched) + 5, 5))

# Concatenate matched and unmatched rows
result = pd.concat([matched_header, matched, unmatched_header, unmatched])

# Calculate the sum of T4 column from matched and unmatched parts
t4_sum = result['T4'].sum()

# Read the amount1 column from another Excel file
diff_df = pd.read_excel('another_file.xlsx')
diff_sum = diff_df['amount1'].sum()

# Calculate the difference and add it to the end of the matched and unmatched parts
diff = t4_sum - diff_sum
result = result.append({'Matched': '', 'Transaction': '', 'Invoice_no': '', 'Amount': '', 'T4': '', 'Unmatched': 'Difference', 'T4': diff}, ignore_index=True)

# Write the result to an Excel file
result.to_excel('result.xlsx', index=False)








import pandas as pd

# read the input file
df = pd.read_excel("input_file.xlsx")

# filter transactions with codes 10 and 11 and with non-null invoice numbers
matched_df = df[(df["Transaction"] == 10) | (df["Transaction"] == 11)]
matched_df = matched_df[matched_df["Invoice_no"].notnull()]

# add header for matched transactions
matched_df = pd.concat([pd.DataFrame([[""] * len(matched_df.columns)], columns=matched_df.columns), matched_df])
matched_df.iloc[0, 0] = "Matched transactions"

# add 5-row gap and header for unmatched transactions
unmatched_df = pd.concat([matched_df, pd.DataFrame([[""] * len(matched_df.columns)] * 5, columns=matched_df.columns)])
unmatched_df.iloc[matched_df.shape[0] + 5, 0] = "Unmatched transactions"

# add rows for unmatched transactions with null invoice numbers
unmatched_rows = df[(df["Transaction"] == 10) | (df["Transaction"] == 11)]
unmatched_rows = unmatched_rows[unmatched_rows["Invoice_no"].isnull()]
unmatched_df = pd.concat([unmatched_df, unmatched_rows])

# add minus sign to amount column for transactions with code 11 in matched transactions
matched_df.loc[matched_df["Transaction"] == 11, "Amount"] = -matched_df.loc[matched_df["Transaction"] == 11, "Amount"]

# copy amount column values to T4 column for unmatched transactions
unmatched_df["T4"] = unmatched_df["Amount"]

# sum T4 column from matched and unmatched parts
t4_sum = matched_df["T4"].sum() + unmatched_df["T4"].sum()

# calculate difference from another data source and add to the end of matched and unmatched parts
diff = 1000  # replace with actual calculation of difference from another data source
matched_df = pd.concat([matched_df, pd.DataFrame([[""] * len(matched_df.columns)], columns=matched_df.columns)])
matched_df.iloc[matched_df.shape[0] - 1, 1] = "Difference from data source: {}".format(diff)
unmatched_df = pd.concat([unmatched_df, pd.DataFrame([[""] * len(unmatched_df.columns)], columns=unmatched_df.columns)])
unmatched_df.iloc[unmatched_df.shape[0] - 1, 1] = "Difference from data source: {}".format(diff)

# save the output to file
with pd.ExcelWriter("output_file.xlsx") as writer:
    matched_df.to_excel(writer, sheet_name="Sheet1", index=False)
    unmatched_df.to_excel(writer, sheet_name="Sheet1", startrow=matched_df.shape[0] + 6, index=False)









import pandas as pd

# read the input file
df = pd.read_excel("input_file.xlsx")

# filter transactions with codes 10 and 11 and with non-null invoice numbers
matched_df = df[(df["Transaction"] == 10) | (df["Transaction"] == 11)]
matched_df = matched_df[matched_df["Invoice_no"].notnull()]

# add header for matched transactions
matched_df = pd.concat([pd.DataFrame([[""] * len(matched_df.columns)], columns=matched_df.columns), matched_df])
matched_df.loc[0, "Transaction"] = "Matched transactions"

# add 5-row gap and header for unmatched transactions
unmatched_df = pd.concat([matched_df, pd.DataFrame([[""] * len(matched_df.columns)] * 5, columns=matched_df.columns)])
unmatched_df.loc[matched_df.shape[0] + 5, "Transaction"] = "Unmatched transactions"

# add rows for unmatched transactions with null invoice numbers
unmatched_rows = df[(df["Transaction"] == 10) | (df["Transaction"] == 11)]
unmatched_rows = unmatched_rows[unmatched_rows["Invoice_no"].isnull()]
unmatched_df = pd.concat([unmatched_df, unmatched_rows])

# add minus sign to amount column for transactions with code 11 in matched transactions
matched_df.loc[matched_df["Transaction"] == 11, "Amount"] = -matched_df.loc[matched_df["Transaction"] == 11, "Amount"]

# copy amount column values to T4 column for unmatched transactions
unmatched_df["T4"] = unmatched_df["Amount"]

# sum T4 column from matched and unmatched parts
t4_sum = matched_df["T4"].sum() + unmatched_df["T4"].sum()

# calculate difference from another data source and add to the end of matched and unmatched parts
diff = 1000  # replace with actual calculation of difference from another data source
matched_df = pd.concat([matched_df, pd.DataFrame([[""] * len(matched_df.columns)], columns=matched_df.columns)])
matched_df.loc[matched_df.index[-1], "Transaction"] = "Difference from data source: {}".format(diff)
unmatched_df = pd.concat([unmatched_df, pd.DataFrame([[""] * len(unmatched_df.columns)], columns=unmatched_df.columns)])
unmatched_df.loc[unmatched_df.index[-1], "Transaction"] = "Difference from data source: {}".format(diff)

# save the output to file
with pd.ExcelWriter("output_file.xlsx") as writer:
    matched_df.to_excel(writer, sheet_name="Sheet1", index=False)
    unmatched_df.to_excel(writer, sheet_name="Sheet1", startrow=matched_df.shape[0] + 6, index=False)














import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import Font, PatternFill

# Read data from the input sheet into a dataframe
df = pd.read_excel('input.xlsx', sheet_name='Sheet1')

# Filter the dataframe by transaction type
df_matched = df[df['Transaction'].isin([10, 11])]

# Create a new dataframe to store the unmatched rows
df_unmatched = df[df['Amount'].isnull()]

# Load the second Excel file
df2 = pd.read_excel('amounts.xlsx')

# Sum the values in column 'Amount1'
sum2 = df2['Amount1'].sum()

# Calculate the sum of the 'Amount' column in the matched and unmatched dataframes
sum_matched = df_matched['Amount'].sum()
sum_unmatched = df_unmatched['Amount'].sum()

# Calculate the difference
diff = sum2 - (sum_matched + sum_unmatched)

# Create a new dataframe to hold the result
result = pd.DataFrame({'Difference': [diff]})

# Write the matched, unmatched and difference rows to the output file
with pd.ExcelWriter('output.xlsx') as writer:
    # Write the matched rows
    df_matched.to_excel(writer, sheet_name='Output', index=False)

    # Add 5 empty rows
    writer.sheets['Output'].row_dimensions[df_matched.shape[0]+1:df_matched.shape[0]+6] = None

    # Write the unmatched rows after 5 empty rows
    df_unmatched.to_excel(writer, sheet_name='Output', startrow=df_matched.shape[0]+6, index=False)

    # Add 3 empty rows after the unmatched rows
    writer.sheets['Output'].row_dimensions[df_matched.shape[0]+df_unmatched.shape[0]+7:df_matched.shape[0]+df_unmatched.shape[0]+10] = None

    # Write the difference amount after 3 empty rows
    result.to_excel(writer, sheet_name='Output', startrow=df_matched.shape[0]+df_unmatched.shape[0]+10, index=False)
