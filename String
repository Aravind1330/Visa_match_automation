# Convert the Invoice and Ticket number columns to strings, if necessary
table1['Supplier_name'] = table1['Supplier_name'].astype(str)
table2['Invoice no'] = table2['Invoice no'].astype(str)
table1['Ticket_no'] = table1['Ticket_no'].astype(str)
table2['Ticket_no'] = table2['Ticket_no'].astype(str)
table1['PNR'] = table1['PNR'].astype(str)
table2['PNR'] = table2['PNR'].astype(str)





aggregated = table1.groupby(['Company', 'Match Rule']).size().reset_index(name='TRF')
total = aggregated['TRF'].sum()
aggregated = aggregated.append(pd.Series(['Total', '-', total], index=aggregated.columns), ignore_index=True)
# Write the aggregated data to the second sheet of the Excel file
with pd.ExcelWriter('D:/Users/avasudevan/Desktop/Visa_match_automation/visa_auto/output1.xlsx', mode='a') as writer:
    aggregated.to_excel(writer, sheet_name='Aggregated', index=False)


table1['Match Rule'] = table1.apply(lambda row1: next((i+1 for i, rule in enumerate(rules) if eval(rule)), 'Unmatched'), axis=1)




merged_table = pd.merge(table1, table2, on=['Supplier_name', 'Ticket_no', 'PNR'], how='outer', suffixes=('_1', '_2'))
merged_table['Match Rule'] = merged_table.apply(lambda row: next((i+1 for i, rule in enumerate(rules) if eval(rule)), 'Unmatched') if not pd.isnull(row['Supplier_name']) else 'Unmatched', axis=1)
