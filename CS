# Process one-to-one matches
output_rows_one_to_one = []
unmatched_output_rows_one_to_one = []
matched_invoices = []

for T5 in T5_table:
    match_found, match_rule = one_to_one_match(T5, IV_table)
    if match_found:
        matching_invoice, rule_index = match_found
        description = rule_descriptions.get(match_rule)
        output_row = {column: T5[column] if column in T5 else matching_invoice[column] for column in output_columns}
        output_row['Match Rule'] = rule_numbers.get(match_rule)
        output_row['Description'] = description
        output_row['Match Type'] = "one-to-one"
        output_rows_one_to_one.append(output_row)
        matched_invoices.append(matching_invoice)
    else:
        unmatched_output_row = {column: T5[column] if column in T5 else None for column in unmatched_output_columns}
        unmatched_output_rows_one_to_one.append(unmatched_output_row)

# Process bundle matches for unmatched transactions
output_rows_bundle = []
unmatched_output_rows_bundle = []

for T5 in unmatched_output_rows_one_to_one:
    matching_invoices, match_rule = bundle_match(T5, IV_table)
    if matching_invoices:
        for invoice, rule_index in matching_invoices:
            description = rule_descriptions.get(rule_index)
            output_row = {column: T5[column] if column in T5 else invoice[column] for column in output_columns}
            output_row['Match Rule'] = rule_numbers.get(match_rule)
            output_row['Description'] = description
            output_row['Match Type'] = "bundle match"
            output_rows_bundle.append(output_row)
            matched_invoices.append(invoice)
    else:
        unmatched_output_rows_bundle.append(T5)

# Combine the output rows from one-to-one matches and bundle matches
output_rows = output_rows_one_to_one + output_rows_bundle
unmatched_output_rows = unmatched_output_rows_one_to_one + unmatched_output_rows_bundle

# Create a DataFrame from the output rows
output_df = pd.DataFrame(output_rows, columns=output_columns)

# Create a DataFrame for unmatched transactions
unmatched_output_df = pd.DataFrame(unmatched_output_rows, columns=unmatched_output_columns)

# Remove duplicates from unmatched_output_df
unmatched_output_df.drop_duplicates(subset=['fin_record_key'], inplace=True)

# Write the unmatched transactions to a separate CSV file
unmatched_output_df.to_csv("unmatched_output.csv", index=False)

# Write the output data to a CSV file
output_df.to_csv(config['output_files']['output_file'], index=False)









        unmatched_output_df.drop(unmatched_indices, inplace=True)
