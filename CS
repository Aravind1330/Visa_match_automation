for T5 in T5_table:
    matching_invoices, match_rule = match_bundle(T5, Invoice_table)
    match_type = "bundle match"

    if len(matching_invoices) == len(rules):
        for rule_index, invoices in matching_invoices.items():
            description = rule_descriptions.get(rule_index)
            for invoice in invoices:
                output_row = {column: T5[column] if column in T5 else invoice[column] for column in output_columns}
                output_row['Match Rule'] = rule_numbers.get(rule_index)
                output_row['Description'] = description
                output_row['Match Type'] = match_type
                output_rows_bundle.append(output_row)

        # Remove the matched transaction from T5_table
        T5_table = [T5_row for T5_row in T5_table if T5_row['fin_record_key'] != T5['fin_record_key']]
        unmatched_fin_record_keys.discard(T5['fin_record_key'])

        unmatched_indices = unmatched_output_df[
            (unmatched_output_df['fin_record_key'] == T5['fin_record_key']) &
            (unmatched_output_df['fin_source_amt'] == T5['fin_source_amt'])
        ].index

        unmatched_output_df.drop(unmatched_indices, inplace=True)

    else:
        unmatched_output_rows_bundle.append(T5)
