def read_rules_file(self, rules_df):
    common_rules = []
    company_rules = {}
    rule_descriptions = {}  # Added for rule descriptions
    rule_numbers = {}  # Added for rule numbers

    for i, row in rules_df.iterrows():
        rule_string = row['rule']
        rule_description = row['description']
        rule_no = row['Rule_No']
        company_id = row['Company_ID']

        rule = eval(f"lambda T5, Invoice: {rule_string}")

        if company_id:
            # Company-specific rule
            if company_id not in company_rules:
                company_rules[company_id] = []

            company_rules[company_id].append(rule)
        else:
            # Common rule
            common_rules.append(rule)

        # Store rule descriptions and numbers
        rule_descriptions[i + 1] = rule_description
        rule_numbers[i + 1] = rule_no

    return common_rules, company_rules, rule_descriptions, rule_numbers











def match_one_to_one(self, T5, Invoice_table, common_rules, company_rules, check_type, company_id):
    matching_invoices = None
    match_rule = None
    invoices_to_remove = []

    # Common rules
    if check_type == 'PATTERN':
        for rule_index, rule in enumerate(common_rules, start=1):
            for Invoice in Invoice_table:
                if rule(T5, Invoice=Invoice) and \
                   abs(float(T5[COLUMN_HEADER.T5_SOURCE_AMT.value])) == abs(float(Invoice[COLUMN_HEADER.INV_MATCH_SOURCE_AMT.value])) and \
                   T5[COLUMN_HEADER.FIN_DEB_CRED_IND.value] == Invoice[COLUMN_HEADER.INV_DEB_CRED_IND.value]:
                    matching_invoices = [Invoice]
                    match_rule = rule_index
                    break

            if matching_invoices:
                return matching_invoices, match_rule

    elif check_type == 'LENIENT':
        for Invoice in Invoice_table:
            if abs(float(T5[COLUMN_HEADER.T5_SOURCE_AMT.value])) == abs(float(Invoice[COLUMN_HEADER.INV_MATCH_SOURCE.value])):
                matching_invoices = [Invoice]
                match_rule = 27  # Adjust the rule number accordingly
                break

        if matching_invoices:
            return matching_invoices, match_rule

    # Company-specific rules
    if company_id in company_rules:
        for rule_index, rule in enumerate(company_rules[company_id], start=len(common_rules)+1):
            for Invoice in Invoice_table:
                if rule(T5, Invoice=Invoice) and \
                   abs(float(T5[COLUMN_HEADER.T5_SOURCE_AMT.value])) == abs(float(Invoice[COLUMN_HEADER.INV_MATCH_SOURCE_AMT.value])) and \
                   T5[COLUMN_HEADER.FIN_DEB_CRED_IND.value] == Invoice[COLUMN_HEADER.INV_DEB_CRED_IND.value]:
                    matching_invoices = [Invoice]
                    match_rule = rule_index
                    break

            if matching_invoices:
                return matching_invoices, match_rule

    return None, None
