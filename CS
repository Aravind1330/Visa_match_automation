    workbook  = writer.book
    worksheet = writer.sheets['Sheet1']

    # Define the format for the header cells (light blue color)
    header_format = workbook.add_format({'bg_color': '#add8e6'})

    # Apply the header format to the header row
    for col_num, value in enumerate(merged_df.columns.values):
        worksheet.write(0, col_num, value, header_format)


 # Get the xlsxwriter workbook and worksheet objects
    workbook  = writer.book
    worksheet = writer.sheets['Sheet1']

    # Define the format for the header cells (light blue color)
    header_format = workbook.add_format({'bg_color': '#add8e6'})

    # Apply the header format to the header rows
    for col_num, value in enumerate(merged_df.columns.values):
        worksheet.write(0, col_num, value, header_format)

    # Apply the header format to the second set of column names (from empty_w_rows)
    for col_num, value in enumerate(empty_w_rows.columns.values):
        worksheet.write(0, col_num + len(df.columns), value, header_format)




empty_w_rows['signed_source_amt'] = pd.to_numeric(empty_w_rows['signed_source_amt'], errors='coerce')
empty_w_rows['signed_source_amt'] = empty_w_rows.apply(lambda row: -row['signed_source_amt'] if row['trans_type_code'] == 11 else row['signed_source_amt'], axis=1)



mask = (empty_w_rows['trans_type_code'] == 11) & (empty_w_rows['signed_source_amt'] > 0)  # Only positive values
empty_w_rows.loc[mask, 'signed_source_amt'] *= -1
