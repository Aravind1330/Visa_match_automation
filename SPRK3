import pandas as pd
import openpyxl

# Read the rules and rule descriptions from a CSV file
rules_df = pd.read_csv('Z:/Desktop/Rules.csv')
rules = []
rule_descriptions = {}
for i, row in rules_df.iterrows():
    rule_string = row['Rule']
    rule_description = row['Description']
    rule = eval(f"lambda row, row2: {rule_string}")
    rules.append(rule)
    rule_descriptions[i+1] = rule_description

# Define the output columns
output_columns = ['Company ID & Name', 'Match Rule', 'Description', 'fin_orig_supplier_nm', 'fin_source_amt', 'inv_match_source_amt', 'inv_erp_vend_no', 'inv_po_no']

# Define a list to store the output rows
output_rows = []

# Define a list to store the error messages
error_messages = []

# Loop through each row in table1 and find a match in table2
for T5 in T5_table:
    try:
        matched = False
        for Invoice in Invoice_table:
            matched, rule_index = match_row(T5, Invoice)
            if matched:
                description = rule_descriptions[rule_index]
                output_rows.append({'Company ID & Name': T5['Company ID & Name'], 'Match Rule': rule_index, 'Description': description, 'fin_orig_supplier_nm': T5['fin_orig_supplier_nm'], 'fin_source_amt': T5['fin_source_amt'], 'inv_match_source_amt': Invoice['inv_match_source_amt'], 'inv_erp_vend_no': Invoice['inv_erp_vend_no'], 'inv_po_no': Invoice['inv_po_no']})

                break
        if not matched:
            error_messages.append(f"No match found for T5: {T5}")
    except Exception as e:
        error_messages.append(f"Error processing T5: {T5}. Error message: {str(e)}")
        continue

# Write the output data to a CSV file
output_df = pd.DataFrame(output_rows, columns=output_columns)
aggregated = output_df.groupby(['Company ID & Name', 'Match Rule']).size().reset_index(name='TRF')
total = aggregated['TRF'].sum()
aggregated = aggregated.append(pd.Series(['Total', '-', total], index=aggregated.columns), ignore_index=True)
output_df.to_csv('Z:/Desktop/output2.csv', index=False)

# Write the error messages to an Excel file
if error_messages:
    wb = openpyxl.Workbook()
    ws = wb.active
    for i, message in enumerate(error_messages):
        ws.cell(row=i+1, column=1, value=message)
    wb.save('Z:/Desktop/errors.xlsx')


# Write the error messages to an Excel file
if error_messages:
    error_df = pd.DataFrame({'Error Messages': error_messages})
    writer = pd.ExcelWriter('Z:/Desktop/errors.xlsx', engine='xlsxwriter')
    error_df.to_excel(writer, sheet_name='Errors', index=False)
    writer.save()
